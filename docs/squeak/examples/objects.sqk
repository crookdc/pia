# Objects in Squeak are realized using a very simple prototype-based implementation. There are only a handful of key
# operations you need to know to get started with objects in Squeak, all of which are demoed in this script.

# First off we want to create a new object from 'nothing'. That is, without cloning an already existing object. This is
# done using the object literal expression. You may recognize the syntax as it is heavily inspired by JavaScript.
var developer = Object {
    name: "crookdc",
    age: 27,
    location: Object {
        country: "Sweden",
        type: "Coastal"
    }
};

# To access properties on objects and nested objects you define the part to the property in terms of a list of
# identifiers joined together with full-stop characters.
print(developer.name);
print(developer.location.country);

# You check for the presence of a property on an object by using it as the expression in an if statement. However, you
# should only check for the presence of one property at a time! If you try to invoke a property getter on a nil value
# then an error occurs.
if (developer.name) {
    print("The developer has a name");
}
if (developer.partner) {
    print("The developer has a partner");
} else {
    print("The developer is alone");
}